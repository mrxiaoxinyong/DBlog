# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2020-03-22 13:06
from __future__ import unicode_literals

import DjangoUeditor.models
import blog_module.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DraftArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='title')),
                ('content_mkd', models.TextField(blank=True, null=True, verbose_name='markdown')),
                ('content_udt', DjangoUeditor.models.UEditorField(blank=True, null=True, verbose_name='ueditor')),
                ('select_content', models.IntegerField(choices=[(0, 'markdown'), (1, 'ueditor')], default=1, help_text='content type of select')),
                ('publish_type', models.IntegerField(choices=[(0, 'open'), (1, 'secret'), (2, 'fans'), (3, 'vip')], default=1, verbose_name='publish_type')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is_active')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='draft_article', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True, verbose_name='label')),
                ('name_en', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True, verbose_name='label_en')),
                ('publish', models.BooleanField(default=False, verbose_name='publish')),
            ],
        ),
        migrations.CreateModel(
            name='PublishArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='title')),
                ('content_mkd', models.TextField(blank=True, null=True, verbose_name='markdown')),
                ('content_udt', DjangoUeditor.models.UEditorField(blank=True, null=True, verbose_name='ueditor')),
                ('select_content', models.IntegerField(choices=[(0, 'markdown'), (1, 'ueditor')], default=1, help_text='content type of select')),
                ('publish_type', models.IntegerField(choices=[(0, 'open'), (1, 'secret'), (2, 'fans'), (3, 'vip')], default=1, verbose_name='publish_type')),
                ('publish_status', models.BooleanField(default=0, verbose_name='publish_status')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='UserCatagory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='catalog_name')),
                ('name_en', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='catalog_name_en')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='describe')),
                ('payment', models.BooleanField(default=False, verbose_name='required_pay')),
                ('traffic', models.IntegerField(default=0, verbose_name='reads')),
                ('image', models.ImageField(blank=True, null=True, upload_to=blog_module.models.user_directory_path)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_catalog', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.AddField(
            model_name='publisharticle',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article', to='blog_module.UserCatagory', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='publisharticle',
            name='label',
            field=models.ManyToManyField(related_name='article', to='blog_module.Label', verbose_name='label'),
        ),
        migrations.AlterIndexTogether(
            name='label',
            index_together=set([('name_en', 'publish'), ('name', 'publish')]),
        ),
        migrations.AddField(
            model_name='draftarticle',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='draft_article', to='blog_module.UserCatagory', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='draftarticle',
            name='label',
            field=models.ManyToManyField(related_name='draft_article', to='blog_module.Label', verbose_name='label'),
        ),
        migrations.AlterUniqueTogether(
            name='usercatagory',
            unique_together=set([('author', 'name')]),
        ),
        migrations.AlterIndexTogether(
            name='usercatagory',
            index_together=set([('author', 'name')]),
        ),
        migrations.AlterIndexTogether(
            name='publisharticle',
            index_together=set([('author', 'publish_type', 'publish_status'), ('author', 'title'), ('author', 'publish_status'), ('author', 'publish_type')]),
        ),
        migrations.AlterIndexTogether(
            name='draftarticle',
            index_together=set([('author', 'title'), ('author', 'is_active'), ('author', 'publish_type')]),
        ),
    ]
